extends AudioStreamPlayer2D

# Tracking all info about the current song
var title = ""
var duration = 0
var bpm = 0
var beats = 0
var measures = 0
var music = null

var current_timestamp = 0.0
var current_measure = 0
var current_beat = 0

var upbeats = 0
var spb = 0.0
var last_reported_beat = 0

# type, left, right, measure, beat, idk
var delay = 1
var notes = [
	["hit", 1, 0, 1, 1, 1, 0], ["hit", 1, 0, 1, 2, 1, 0], ["hit", 1, 0, 1, 3, 1, 0], ["hit", 1, 0, 1, 4, 1, 0],
	["hit", 1, 0, 2, 1, 1, 0], ["hit", 1, 0, 2, 2, 1, 0], ["hit", 1, 0, 2, 3, 1, 0], ["hit", 1, 0, 2, 4, 1, 0],
	["hit", 0, 1, 3, 1, 1, 0], ["hit", 0, 1, 3, 2, 1, 0], ["hit", 0, 1, 3, 3, 1, 0], ["hit", 0, 1, 3, 4, 1, 0],
	["hit", 0, 1, 4, 1, 1, 0], ["hit", 0, 1, 4, 2, 1, 0], ["hit", 0, 1, 4, 3, 1, 0], ["hit", 0, 1, 4, 4, 1, 0],
	["hit", 1, 1, 5, 1, 1, 0], ["hit", 1, 1, 5, 2, 1, 0], ["hit", 1, 1, 5, 3, 1, 0], ["hit", 1, 1, 5, 4, 1, 0],
	["hit", 1, 0, 6, 1, 1, 0], ["hit", 0, 1, 6, 2, 1, 0], ["hit", 1, 0, 6, 3, 1, 0], ["hit", 0, 1, 6, 4, 1, 0],
	["hit", 0, 1, 7, 1, 1, 0], ["hit", 1, 0, 7, 2, 1, 0], ["hit", 0, 1, 7, 3, 1, 0], ["hit", 1, 0, 7, 4, 1, 0],
	["hit", 1, 1, 8, 1, 1, 0], ["hit", 1, 1, 8, 2, 1, 0], ["hit", 1, 1, 8, 3, 1, 0], ["hit", 1, 1, 8, 4, 1, 0],
	
	["hit", 0, 1, 9, 1, 1, 0], ["hit", 1, 0, 9, 2, 1, 0], ["hit", 0, 1, 9, 3, 1, 0], ["hit", 0, 1, 9, 4, 1, 0],
	["hit", 1, 0, 10, 1, 1, 0], ["hit", 0, 1, 10, 2, 1, 0], ["hit", 1, 0, 10, 3, 1, 0], ["hit", 1, 0, 10, 4, 1, 0],
	["hit", 0, 1, 11, 1, 1, 0], ["hit", 1, 0, 11, 2, 1, 0], ["hit", 0, 1, 11, 3, 1, 0], ["hit", 0, 1, 11, 4, 1, 0],
	["hit", 1, 0, 12, 1, 1, 0], ["hit", 0, 1, 12, 2, 1, 0], ["hit", 1, 0, 12, 3, 1, 0], ["hit", 1, 0, 12, 4, 1, 0],
	["hit", 0, 1, 13, 1, 1, 0], ["hit", 1, 0, 13, 2, 1, 0], ["hit", 0, 1, 13, 3, 1, 0], ["hit", 0, 1, 13, 4, 1, 0],
	["hit", 1, 0, 14, 1, 1, 0], ["hit", 0, 1, 14, 2, 1, 0], ["hit", 1, 0, 14, 3, 1, 0], ["hit", 1, 0, 14, 4, 1, 0],
	["hit", 0, 1, 15, 1, 1, 0], ["hit", 1, 0, 15, 2, 1, 0], ["hit", 0, 1, 15, 3, 1, 0], ["hit", 0, 1, 15, 4, 1, 0],
	["hit", 1, 0, 16, 1, 1, 0], ["hit", 0, 1, 16, 2, 1, 0], ["hit", 1, 0, 16, 3, 1, 0], ["hit", 1, 0, 16, 4, 1, 0],
	
	["hit", 1, 0, 17, 1, 1, 0], ["hit", 1, 0, 17, 2, 1, 0], ["hit", 0, 1, 17, 3, 1, 0], ["hit", 0, 1, 17, 4, 1, 0],
	["hit", 1, 0, 18, 1, 1, 0], ["hit", 1, 0, 18, 2, 1, 0], ["hit", 0, 1, 18, 3, 1, 0], ["hit", 0, 1, 18, 4, 1, 0],
	["hit", 1, 0, 19, 1, 1, 0], ["hit", 1, 1, 19, 2, 1, 0], ["hit", 0, 1, 19, 3, 1, 0], ["hit", 1, 1, 19, 4, 1, 0],
	["hit", 1, 0, 20, 1, 1, 0], ["hit", 1, 1, 20, 2, 1, 0], ["hit", 0, 1, 20, 3, 1, 0], ["hit", 1, 1, 20, 4, 1, 0],
	["hit", 1, 0, 21, 1, 1, 0], ["hit", 1, 0, 21, 2, 1, 0], ["hit", 0, 1, 21, 3, 1, 0], ["hit", 0, 1, 21, 4, 1, 0],
	["hit", 1, 0, 22, 1, 1, 0], ["hit", 1, 0, 22, 2, 1, 0], ["hit", 0, 1, 22, 3, 1, 0], ["hit", 0, 1, 22, 4, 1, 0],
	["hit", 1, 0, 23, 1, 1, 0], ["hit", 1, 1, 23, 2, 1, 0], ["hit", 0, 1, 23, 3, 1, 0], ["hit", 1, 1, 23, 4, 1, 0],
	["hit", 1, 0, 24, 1, 1, 0], ["hit", 1, 1, 24, 2, 1, 0], ["hit", 0, 1, 24, 3, 1, 0], ["hit", 1, 1, 24, 4, 1, 0],
	
	["hit", 1, 1, 25, 1, 1, 0], ["hit", 1, 1, 25, 2, 1, 0], ["hit", 0, 1, 25, 3, 1, 0], ["hit", 1, 0, 25, 4, 1, 0],
	["hit", 1, 1, 26, 1, 1, 0], ["hit", 1, 1, 26, 2, 1, 0], ["hit", 1, 0, 26, 3, 1, 0], ["hit", 0, 1, 26, 4, 1, 0],
	["hit", 1, 1, 27, 1, 1, 0], ["hit", 1, 1, 27, 2, 1, 0], ["hit", 0, 1, 27, 3, 1, 0], ["hit", 1, 0, 27, 4, 1, 0],
	["hit", 1, 1, 28, 1, 1, 0], ["hit", 1, 1, 28, 2, 1, 0], ["hit", 1, 0, 28, 3, 1, 0], ["hit", 0, 1, 28, 4, 1, 0],
	["hit", 1, 1, 29, 1, 1, 0], ["hit", 1, 1, 29, 2, 1, 0], ["hit", 0, 1, 29, 3, 1, 0], ["hit", 1, 0, 29, 4, 1, 0],
	["hit", 1, 1, 30, 1, 1, 0], ["hit", 1, 1, 30, 2, 1, 0], ["hit", 1, 0, 30, 3, 1, 0], ["hit", 0, 1, 30, 4, 1, 0],
	["hit", 1, 1, 31, 1, 1, 0], ["hit", 1, 1, 31, 2, 1, 0], ["hit", 0, 1, 31, 3, 1, 0], ["hit", 1, 0, 31, 4, 1, 0],
	["hit", 1, 1, 32, 1, 1, 0], ["hit", 1, 1, 32, 2, 1, 0], ["hit", 1, 0, 32, 3, 1, 0], ["hit", 0, 1, 32, 4, 1, 0],
	
	["hit", 1, 0, 33, 1, 1, 0], ["hit", 1, 0, 33, 2, 1, 0], ["hit", 0, 1, 33, 3, 1, 0], ["hit", 0, 1, 33, 4, 1, 0],
	["hit", 1, 0, 34, 1, 1, 0], ["hit", 1, 0, 34, 2, 1, 0], ["hit", 0, 1, 34, 3, 1, 0], ["hit", 0, 1, 34, 4, 1, 0],
	["hit", 1, 0, 35, 1, 1, 0], ["hit", 1, 1, 35, 2, 1, 0], ["hit", 0, 1, 35, 3, 1, 0], ["hit", 1, 1, 35, 4, 1, 0],
	["hit", 1, 0, 36, 1, 1, 0], ["hit", 1, 1, 36, 2, 1, 0], ["hit", 0, 1, 36, 3, 1, 0], ["hit", 1, 1, 36, 4, 1, 0],
	["hit", 1, 0, 37, 1, 1, 0], ["hit", 1, 0, 37, 2, 1, 0], ["hit", 0, 1, 37, 3, 1, 0], ["hit", 0, 1, 37, 4, 1, 0],
	["hit", 1, 0, 38, 1, 1, 0], ["hit", 1, 0, 38, 2, 1, 0], ["hit", 0, 1, 38, 3, 1, 0], ["hit", 0, 1, 38, 4, 1, 0],
	["hit", 1, 0, 39, 1, 1, 0], ["hit", 1, 1, 39, 2, 1, 0], ["hit", 0, 1, 39, 3, 1, 0], ["hit", 1, 1, 39, 4, 1, 0],
	["hit", 1, 0, 40, 1, 1, 0], ["hit", 1, 1, 40, 2, 1, 0], ["hit", 0, 1, 40, 3, 1, 0], ["hit", 1, 1, 40, 4, 1, 0],
	
	["hit", 1, 1, 41, 1, 1, 0], ["hit", 1, 1, 41, 2, 1, 0], ["hit", 0, 1, 41, 3, 1, 0], ["hit", 1, 0, 41, 4, 1, 0],
	["hit", 1, 1, 42, 1, 1, 0], ["hit", 1, 1, 42, 2, 1, 0], ["hit", 1, 0, 42, 3, 1, 0], ["hit", 0, 1, 42, 4, 1, 0],
	["hit", 1, 1, 43, 1, 1, 0], ["hit", 1, 1, 43, 2, 1, 0], ["hit", 0, 1, 43, 3, 1, 0], ["hit", 1, 0, 43, 4, 1, 0],
	["hit", 1, 1, 44, 1, 1, 0], ["hit", 1, 1, 44, 2, 1, 0], ["hit", 1, 0, 44, 3, 1, 0], ["hit", 0, 1, 44, 4, 1, 0],
	["hit", 1, 1, 45, 1, 1, 0], ["hit", 1, 1, 45, 2, 1, 0], ["hit", 0, 1, 45, 3, 1, 0], ["hit", 1, 0, 45, 4, 1, 0],
	["hit", 1, 1, 46, 1, 1, 0], ["hit", 1, 1, 46, 2, 1, 0], ["hit", 1, 0, 46, 3, 1, 0], ["hit", 0, 1, 46, 4, 1, 0],
	["hit", 1, 1, 47, 1, 1, 0], ["hit", 1, 1, 47, 2, 1, 0], ["hit", 0, 1, 47, 3, 1, 0], ["hit", 1, 0, 47, 4, 1, 0],
	["hit", 1, 1, 48, 1, 1, 0], ["hit", 1, 1, 48, 2, 1, 0], ["hit", 1, 0, 48, 3, 1, 0], ["hit", 0, 1, 48, 4, 1, 0],
	
	["hit", 1, 0, 49, 1, 1, 0], ["hit", 1, 0, 49, 2, 1, 0], ["hit", 0, 1, 49, 3, 1, 0], ["hit", 0, 1, 49, 4, 1, 0],
	["hit", 1, 0, 50, 1, 1, 0], ["hit", 1, 0, 50, 2, 1, 0], ["hit", 0, 1, 50, 3, 1, 0], ["hit", 0, 1, 50, 4, 1, 0],
	["hit", 1, 0, 51, 1, 1, 0], ["hit", 1, 1, 51, 2, 1, 0], ["hit", 0, 1, 51, 3, 1, 0], ["hit", 1, 1, 51, 4, 1, 0],
	["hit", 1, 0, 52, 1, 1, 0], ["hit", 1, 1, 52, 2, 1, 0], ["hit", 0, 1, 52, 3, 1, 0], ["hit", 1, 1, 52, 4, 1, 0],
	["hit", 1, 0, 53, 1, 1, 0], ["hit", 1, 0, 53, 2, 1, 0], ["hit", 0, 1, 53, 3, 1, 0], ["hit", 0, 1, 53, 4, 1, 0],
	["hit", 1, 0, 54, 1, 1, 0], ["hit", 1, 0, 54, 2, 1, 0], ["hit", 0, 1, 54, 3, 1, 0], ["hit", 0, 1, 54, 4, 1, 0],
	["hit", 1, 0, 55, 1, 1, 0], ["hit", 1, 1, 55, 2, 1, 0], ["hit", 0, 1, 55, 3, 1, 0], ["hit", 1, 1, 55, 4, 1, 0],
	["hit", 1, 0, 56, 1, 1, 0], ["hit", 1, 1, 56, 2, 1, 0], ["hit", 0, 1, 56, 3, 1, 0], ["hit", 1, 1, 56, 4, 1, 0],
	
	["hit", 1, 1, 57, 1, 1, 0], ["hit", 1, 1, 57, 2, 1, 0], ["hit", 0, 1, 57, 3, 1, 0], ["hit", 1, 0, 57, 4, 1, 0],
	["hit", 1, 1, 58, 1, 1, 0], ["hit", 1, 1, 58, 2, 1, 0], ["hit", 1, 0, 58, 3, 1, 0], ["hit", 0, 1, 58, 4, 1, 0],
	["hit", 1, 1, 59, 1, 1, 0], ["hit", 1, 1, 59, 2, 1, 0], ["hit", 0, 1, 59, 3, 1, 0], ["hit", 1, 0, 59, 4, 1, 0],
	["hit", 1, 1, 60, 1, 1, 0], ["hit", 1, 1, 60, 2, 1, 0], ["hit", 1, 0, 60, 3, 1, 0], ["hit", 0, 1, 60, 4, 1, 0],
	["hit", 1, 1, 61, 1, 1, 0], ["hit", 1, 1, 61, 2, 1, 0], ["hit", 0, 1, 61, 3, 1, 0], ["hit", 1, 0, 61, 4, 1, 0],
	["hit", 1, 1, 62, 1, 1, 0], ["hit", 1, 1, 62, 2, 1, 0], ["hit", 1, 0, 62, 3, 1, 0], ["hit", 0, 1, 62, 4, 1, 0],
	["hit", 1, 1, 63, 1, 1, 0], ["hit", 1, 1, 63, 2, 1, 0], ["hit", 0, 1, 63, 3, 1, 0], ["hit", 1, 0, 63, 4, 1, 0],
	["hit", 1, 1, 64, 1, 1, 0], ["hit", 1, 1, 64, 2, 1, 0], ["hit", 1, 0, 64, 3, 1, 0], ["hit", 0, 1, 64, 4, 1, 0],
	
	["hit", 1, 0, 65, 1, 1, 0], ["hit", 1, 0, 65, 2, 1, 0], ["hit", 0, 1, 65, 3, 1, 0], ["hit", 0, 1, 65, 4, 1, 0],
	["hit", 1, 0, 66, 1, 1, 0], ["hit", 1, 0, 66, 2, 1, 0], ["hit", 0, 1, 66, 3, 1, 0], ["hit", 0, 1, 66, 4, 1, 0],
	["hit", 1, 0, 67, 1, 1, 0], ["hit", 1, 1, 67, 2, 1, 0], ["hit", 0, 1, 67, 3, 1, 0], ["hit", 1, 1, 67, 4, 1, 0],
	["hit", 1, 0, 68, 1, 1, 0], ["hit", 1, 1, 68, 2, 1, 0], ["hit", 0, 1, 68, 3, 1, 0], ["hit", 1, 1, 68, 4, 1, 0],
	["hit", 1, 0, 69, 1, 1, 0], ["hit", 1, 0, 69, 2, 1, 0], ["hit", 0, 1, 69, 3, 1, 0], ["hit", 0, 1, 69, 4, 1, 0],
	["hit", 1, 0, 70, 1, 1, 0], ["hit", 1, 0, 70, 2, 1, 0], ["hit", 0, 1, 70, 3, 1, 0], ["hit", 0, 1, 70, 4, 1, 0],
	["hit", 1, 0, 71, 1, 1, 0], ["hit", 1, 1, 71, 2, 1, 0], ["hit", 0, 1, 71, 3, 1, 0], ["hit", 1, 1, 71, 4, 1, 0],
	["hit", 1, 0, 72, 1, 1, 0], ["hit", 1, 1, 72, 2, 1, 0], ["hit", 0, 1, 72, 3, 1, 0], ["hit", 1, 1, 72, 4, 1, 0],
	
	["hit", 1, 1, 73, 1, 1, 0], ["hit", 1, 1, 73, 2, 1, 0], ["hit", 0, 1, 73, 3, 1, 0], ["hit", 1, 0, 73, 4, 1, 0],
	["hit", 1, 1, 74, 1, 1, 0], ["hit", 1, 1, 74, 2, 1, 0], ["hit", 1, 0, 74, 3, 1, 0], ["hit", 0, 1, 74, 4, 1, 0],
	["hit", 1, 1, 75, 1, 1, 0], ["hit", 1, 1, 75, 2, 1, 0], ["hit", 0, 1, 75, 3, 1, 0], ["hit", 1, 0, 75, 4, 1, 0],
	["hit", 1, 1, 76, 1, 1, 0], ["hit", 1, 1, 76, 2, 1, 0], ["hit", 1, 0, 76, 3, 1, 0], ["hit", 0, 1, 76, 4, 1, 0],
	["hit", 1, 1, 77, 1, 1, 0], ["hit", 1, 1, 77, 2, 1, 0], ["hit", 0, 1, 77, 3, 1, 0], ["hit", 1, 0, 77, 4, 1, 0],
	["hit", 1, 1, 78, 1, 1, 0], ["hit", 1, 1, 78, 2, 1, 0], ["hit", 1, 0, 78, 3, 1, 0], ["hit", 0, 1, 78, 4, 1, 0],
	["hit", 1, 1, 79, 1, 1, 0], ["hit", 1, 1, 79, 2, 1, 0], ["hit", 0, 1, 79, 3, 1, 0], ["hit", 1, 0, 79, 4, 1, 0],
	["hit", 1, 1, 80, 1, 1, 0], ["hit", 1, 1, 80, 2, 1, 0], ["hit", 1, 0, 80, 3, 1, 0], ["hit", 0, 1, 80, 4, 1, 0],
	
	["hit", 0, 1, 81, 1, 1, 0], ["hit", 1, 0, 81, 2, 1, 0], ["hit", 0, 1, 81, 3, 1, 0], ["hit", 1, 0, 81, 4, 1, 0],
	["hit", 1, 1, 82, 1, 1, 0], ["hit", 0, 1, 82, 2, 1, 0], ["hit", 1, 0, 82, 3, 1, 0], ["hit", 0, 1, 82, 4, 1, 0],
	["hit", 1, 1, 83, 1, 1, 0], ["hit", 1, 0, 83, 2, 1, 0], ["hit", 0, 1, 83, 3, 1, 0], ["hit", 1, 0, 83, 4, 1, 0],
	["hit", 1, 1, 84, 4, 1, 0],	

]


signal note(type, side, duration)

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	autoplay = false

	# retrieve preliminary info from parent/header node
	music = load("res://Assets/sounds/crab_rave.mp3")
	title = "Crab Rave"
	duration = 244
	bpm = 125
	measures = 84
	beats = 336

	current_measure = 1
	current_beat = 1
	spb = 60.0 / bpm
	upbeats = 1
	
	stream = music
	play()


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta: float) -> void:
	pass


func _input(event):
	if event.is_action_pressed("space"):
		stop()
		finished.emit()


func _physics_process(_delta):
	if playing:
		current_timestamp = get_playback_position() + AudioServer.get_time_since_last_mix()
		current_timestamp -= AudioServer.get_output_latency()
		current_beat = int(floor(current_timestamp / spb)) - upbeats
		_report_beat()


func _report_beat():
	while !notes.is_empty() && current_beat >= notes.front()[3] * 4 + notes.front()[4]:
		var n = notes.pop_front()
		get_tree().call_group("game_scene", "spawn_prey", n[1], n[2])	
